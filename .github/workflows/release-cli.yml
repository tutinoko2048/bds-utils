name: Release CLI

on:
  workflow_dispatch:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun i

      - name: Read package version
        id: version
        run: |
          # タグからバージョンを抽出 (1.2.3 -> 1.2.3)
          if [ -n "${{ github.ref_name }}" ]; then
            current_version="${{ github.ref_name }}"
          else
            # 手動実行の場合はpackage.jsonから取得
            current_version=$(node -p -e "require('./packages/cli/package.json').version")
          fi
          echo "version=$current_version" >> $GITHUB_OUTPUT

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: BDS Utils CLI v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Publish CLI to NPM
        run: |
          cd packages/cli
          npm publish --provenance --access public

  build:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            extension: .exe
          - os: ubuntu-latest
            extension: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun i

      - name: Build CLI executable
        run: |
          cd packages/cli
          bun run compile:prod

      - name: Prepare artifact
        run: |
          cd packages/cli/build
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv bds-utils bds-utils${{ matrix.extension }}
          fi
        shell: bash

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: packages/cli/build/bds-utils${{ matrix.extension }}
          asset_name: bds-utils${{ matrix.extension }}
          asset_content_type: application/octet-stream